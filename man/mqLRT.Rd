% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hyp_testing.R
\name{mqLRT}
\alias{mqLRT}
\title{Likelihood-Ratio test for M-quantile regression}
\usage{
mqLRT(object, id.beta = "all", q = "all", alpha = 0.05)
}
\arguments{
\item{object}{an object of class "mquantfit", usually, a result of a call to \link{mquantreg}}

\item{id.beta}{identifier for the coefficient(s) to be jointly tested. Expects vector of positions
in coefficients of \code{object}. Defaults to "all", which does not include the intercept.}

\item{q}{identifies the m-quantile(s) for which coefficients should be tested.
Expects vector of m-quantiles e.g. \code{c(0.3, 0.5, 0.7)}.Defaults to "all".}

\item{alpha}{significance level can be chosen to get a statement about significance, when printing.}

\item{coefficents}{the estimated coeffients of the full model to be tested.}

\item{statistic}{the test statistic}

\item{p.values}{the p-values for the wald tests.}

\item{df}{the degrees of freedom of the LR-tests.}
}
\value{
the function mqLRT returns the the result of
}
\description{
This function allows to test the Null hypothesis of regression coefficients
of an estimated m-quantile model to be jointly zero. This is accomplished by comparing
an estimated 'full' model with a user specified 'reduced' model, i.e. models have to be nested.
}
\examples{
df <- simulate_data(n = 1000,
                  real.betas = c(0.1, 0.3, 0.1 ),
                  response.type = "continuous.normal",
                  measurement.error = 0.05)

fit <- mquantreg(formula = Y ~ x1 + x2, data = df, q  = c(0.5, 0.7), method = "continuous")

hyp_test <- mqLRT(fit, id.beta = "all", q = "all")
print(hyp_test)
}
