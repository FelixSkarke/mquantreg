% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate.data.R
\name{simulate_data}
\alias{simulate_data}
\title{Simulate Data}
\usage{
simulate_data(
  n,
  real.betas = c(0, 1),
  X = FALSE,
  response.type = "continuous.normal",
  measurement.error = 0.05,
  sd = 1,
  error.strength = 3
)
}
\arguments{
\item{n}{numeric, number of observations to generate.}

\item{real.betas}{vector with true beta used for simulation.}

\item{X}{dataframe with x-values, if left empty x-values will be generated as well.}

\item{response.type}{string indicating what type of error term the data should have.
Following distribution are available:
\itemize{
\item \code{"continuous.normal"} - normally distributed data with symmetric outlier contamination.
\item \code{"continuous.normal.posout"} - normally distributed data with only positive outlier contamination.
\item \code{"continuous.lognormal"} - log-normally distributed data.
\item \code{"count.nb"} - negative binomially distributed data.
\item \code{"count.poisson"} -  poisson distributed data.
\item \code{"binary"} - binary data
}}

\item{measurement.error}{numeric, controlling what proportion of the data is contaminated with outliers.}

\item{sd}{numeric setting the standard deviation of the error term.}

\item{error.strength}{numeric controlling the strangth of outliers.}
}
\value{
dataframe
}
\description{
The \code{simulate_data}-function generates data, which can be used for testing and exploring m-quantile regression.
The data can be contaminated with outliers for testing the robust properties of m-quantile regression.
}
\examples{
library(mq1)
data_sim <- simulate_data(300,
                        real.betas = c(0, 5),
                        X = FALSE,
                        response.type = "continuous.normal",
                        measurement.error = 0.05,
                        sd = 1,
                        error.strength = 3)
}
