% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mqcont.R
\name{mqcont}
\alias{mqcont}
\title{M-Quantile Estimation for Continuous Data using MLE.}
\usage{
mqcont(
  x,
  y,
  q = 0.5,
  k = 1.345,
  scale.estimator = "Mad",
  offset = NULL,
  case.weights = NULL,
  var.weights = NULL,
  maxit = 1000,
  acc = 1e-04,
  compute.qscores = FALSE,
  qgrid = c(0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, seq(from = 0.45, to = 0.55, by =
    0.005), 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9)
)
}
\arguments{
\item{x}{matrix, containing independent variables.}

\item{y}{vector, containing the continuous dependent variable.}

\item{q}{number strictly between 0 and 1, which specifies the m-quantile to be estimated.}

\item{k}{a number greater than 0. k is the parameter for the huber psi-function, the default value is 1.345.}

\item{scale.estimator}{string, defines which function is used to estimate the scale parameter.
Following function are implemented in the package: \cr
\itemize{
\item \code{"Mad"} - Mean Absolute Deviation (default)
\item \code{"cMad"} - Corrected Mean Absolute Deviation
}}

\item{offset}{This can be used to specify an a priori known component to be included in the linear predictor during fitting.
This should be NULL or a numeric vector of length equal to the number of cases.}

\item{case.weights}{vector of observation weights;
if supplied, the algorithm fits to minimize the sum of the weights multiplied into the absolute residuals.
The length of weights must be the same as the number of observations.
The weights must be nonnegative and it is strongly recommended that they be strictly positive, since zero weights are ambiguous}

\item{var.weights}{dataframe, if supplied the residuals are scaled.}

\item{maxit}{an integer, which defines the maximal number of iteration
before the algorithm stops although it has not converged yet.
If the maximal number of iteration is reached a warning message will be prompted.}

\item{acc}{defines convergence criteria}

\item{compute.qscores}{boolean, controls if q-scores are estimated.}

\item{qgrid}{vector of quantiles, which are to be used for qscore calculations.}
}
\value{
See \code{\link{mquantreg}} for details.
\code{summary()}, \code{print()}, \code{fitted()} and \code{predict()}-methods are avaiable.
}
\description{
The function implements m-quantile estimation for continuous data first proposed by Breckling and Chambers (1988).
This implementation uses the paremetric representation introduced by Bianchi et al. (2015).
The function is called by the mquantreg-function, when the method "continuous" is selected. Important:
Standalone use is possible, but not advised.
}
\examples{
library(mq1)

df <- simulate_data(n = 100,
                   real.betas = c(0.1, 0.3, 0.1 ),
                   response.type = "continuous.normal",
                   measurement.error = 0.05)

fit <- mquantreg(formula = Y ~ x1 + x2,data = df, q  = 0.5, method = "continuous")
print(fit)

}
\references{
\itemize{
\item Breckling, J., & Chambers, R. (1988). M-quantiles. Biometrika, 75(4), 761-771.
\item Bianchi, A., Fabrizi, E., Salvati, N., & Tzavidis, N. (2015).
M-quantile Regression: Diagnostics and the parametric representation of the model.
Book of Abstracts SIS - CLADAG, 303-306
\item Bianchi, A., & Salvati, N. (2015). Asymptotic properties and variance estimators
of the M-quantile regression coefficients estimators. Commun.Stat. Theory., 44, 2016â€“2429.
}
}
